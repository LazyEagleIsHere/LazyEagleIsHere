#include <iostream>
#include <string>
#include <vector>
using namespace std;
string longestCommonSubstring(const string& str1, const string& str2) {
  int len1 = str1.length();
  int len2 = str2.length();
  vector<vector<int>> dp(len1 + 1, vector<int>(len2 + 1, 0));
  int maxLength = 0;
  int endIndex = 0;
  for (int i = 1; i <= len1; i++) {
    for (int j = 1; j <= len2; j++) {
      if (str1[i - 1] == str2[j - 1]) {
        dp[i][j] = dp[i - 1][j - 1] + 1;
        if (dp[i][j] > maxLength) {
          maxLength = dp[i][j];
          endIndex = i - 1;
        }
      }
    }
  }
  string longestSubstring = str1.substr(endIndex - maxLength + 1, maxLength);
  return longestSubstring;
}
int main() {
  string str1, str2;
  getline(cin, str1);
  getline(cin, str2);
  string longestSubstring = longestCommonSubstring(str1, str2);
  cout << longestSubstring << endl;
  return 0;
}
